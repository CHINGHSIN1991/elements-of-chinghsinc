---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

import BaseContentLayout from "./BaseContentLayout.astro";
import PostHeader from "../components/layout/PostHeader.astro";

interface ProjectFrontmatter {
  draft: boolean;
  title: string;
  description: string;
  date: Date;
  category: string;
  designers: string[];
  cover: {
    src: string;
    alt: string;
  };
  images?: {
    src: string;
    alt: string;
  }[];
}

const allProjects = await getCollection('projects', ({ data }: CollectionEntry<'projects'>) => {
  return !data.draft;
});

const { project } = Astro.props;

const {
  title,
  description,
  date,
  category,
  designers,
  cover,
  images,
} = project.data as ProjectFrontmatter;

const relatedProjects = allProjects.filter(
  (project: CollectionEntry<'projects'>) => 
    project.data.category.toLowerCase() === category.toLowerCase() && 
    project.data.title !== title
).slice(0,3);
---

<BaseContentLayout {title} {description} image={cover} {images} project={project?.data}>
  <PostHeader
    {title} {description} {date} {category} {cover} {designers}
  />
  <div class="flex gap-8 px-4 py-8 max-w-7xl mx-auto">
    <div class="flex-grow">
      <slot />
    </div>
    <div class="sidebar">
      <aside class="sidebar-widget" aria-label="Project categories">
        <h2 class="text-xl font-bold mb-4">Project Categories</h2>
      </aside>
      {
        relatedProjects.length > 0 && (
        <aside class="sidebar-widget" aria-label="Related projects">
          <h2 class="text-xl font-bold mb-4">Related Projects</h2>
        </aside>
        )
      }
    </div>
  </div>
</BaseContentLayout>
