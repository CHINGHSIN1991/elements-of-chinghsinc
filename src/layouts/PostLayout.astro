---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

import MainLayout from "./MainLayout.astro";
import PostHeader from "../components/PostHeader.astro";

interface PostFrontmatter {
  draft: boolean;
  title: string;
  description: string;
  date: Date;
  category: string;
  designers?: string[];
  image?: {
    src: string;
    alt: string;
  };
  images?: {
    src: string;
    alt: string;
  }[];
}

const allPosts = await getCollection('posts', ({ data }: CollectionEntry<'posts'>) => {
  return !data.draft;
});

const { post } = Astro.props;

const {
  title,
  description,
  date,
  category,
  designers,
  image,
  images,
} = post.data as PostFrontmatter;

// console.log('aaa', post);
const relatedPosts = allPosts.filter(
  (post: CollectionEntry<'posts'>) => 
    post.data.category.toLowerCase() === category.toLowerCase() && 
    post.data.title !== title
).slice(0,3);

// 處理 cover 屬性
const coverData = image ? { src: image.src, alt: image.alt } : undefined;
---

<MainLayout {title} {description} image={image} post={post.data}>
  <PostHeader
    {title} {description} {date} {category} cover={coverData} designers={designers || []}
  />
  <div class="flex gap-8 px-4 py-8 max-w-7xl mx-auto">
    <div class="flex-grow">
      <slot />
    </div>
  </div>
  {images && (
    <div class="auto-grid">
      {images.map((image) => (
        <img 
          src={image.src} 
          alt={image.alt} 
          class="w-full h-[300px] object-cover rounded-lg"
        />
      ))}
    </div>
  )}
</MainLayout>
