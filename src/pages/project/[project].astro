---
import { getCollection, type CollectionEntry } from 'astro:content';
import { slugify, formatDate } from '../../ts/utils';
import MainLayout from '../../layouts/MainLayout.astro';

export const prerender = true;

export async function getStaticPaths() {
  const allProjects = await getCollection('projects', ({ data }) => {
    return !data.draft;
  });
  
  return allProjects.map((project) => ({
    params: { project: project.id },
    props: { project }
  }));
}

interface ProjectPageProps {
  project: CollectionEntry<'projects'>;
}

const { project } = Astro.props as ProjectPageProps;
const { data, id } = project;

const getRelatedProjects = async () => {
  const allProjects = await getCollection('projects', ({ data: projectData, id: projectId }) => {
    return !projectData.draft && projectId !== id;
  });
  
  return allProjects
    .filter(p => p.data.category === data.category)
    .slice(0, 3);
};

const relatedProjects = await getRelatedProjects();
---

<MainLayout title={data.title} description={data.description}>
  <article class="max-w-6xl mx-auto px-4 py-8">
    <header class="mb-12 text-center">
      <div class="flex justify-center items-center gap-2 mb-4">
        <span class="px-3 py-1 bg-primary/90 text-white text-sm font-medium rounded-full">
          {data.category}
        </span>
        <span class="text-text-secondary">
          {formatDate(new Date(data.date))}
        </span>
      </div>
      
      <h1 class="text-4xl md:text-5xl font-bold mb-4 transition-name="title">{data.title}</h1>
      
      <p class="text-text-secondary text-lg max-w-3xl mx-auto mb-6">
        {data.description}
      </p>
      
      {data.designers && data.designers.length > 0 && (
        <div class="flex justify-center items-center mb-8">
          <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-text-secondary" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
            </svg>
            <span class="text-text-secondary">設計師: </span>
            <div class="flex flex-wrap gap-2 ml-2">
              {data.designers.map((designer: string) => (
                <span class="text-primary">{designer}</span>
              ))}
            </div>
          </div>
        </div>
      )}
    </header>
    
    <div class="mb-12">
      <img 
        src={typeof data.cover === 'string' ? data.cover : data.cover?.src || "/assets/images/fallback-image.png"} 
        alt={data.title || "專案圖片"} 
        class="w-full h-auto max-h-[600px] object-cover rounded-lg shadow-md"
      />
    </div>
    
    <div class="prose prose-lg dark:prose-invert max-w-4xl mx-auto mb-12">
      <slot />
    </div>
    
    {data.tags && data.tags.length > 0 && (
      <div class="max-w-4xl mx-auto mb-12">
        <h3 class="text-lg font-bold mb-4">標籤</h3>
        <div class="flex flex-wrap gap-2">
          {data.tags.map((tag: string) => (
            <a href={`/tag/${slugify(tag)}`} class="px-3 py-1 bg-background-secondary rounded-full hover:bg-primary/10 transition-colors">
              #{tag}
            </a>
          ))}
        </div>
      </div>
    )}
    
    {data.images && data.images.length > 0 && (
      <div class="max-w-6xl mx-auto mb-12">
        <h3 class="text-2xl font-bold mb-6">專案圖片</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {data.images.map((image: any) => {
            const imgSrc = typeof image === 'string' ? image : image.src;
            const imgAlt = typeof image === 'string' ? '專案圖片' : image.alt || '專案圖片';
            
            return (
              <div class="aspect-video overflow-hidden rounded-lg shadow-sm hover:shadow-md transition-all duration-300">
                <img 
                  src={imgSrc} 
                  alt={imgAlt} 
                  class="w-full h-full object-cover"
                />
              </div>
            );
          })}
        </div>
      </div>
    )}
    
    {relatedProjects.length > 0 && (
      <div class="max-w-6xl mx-auto mt-16">
        <h3 class="text-2xl font-bold mb-6">相關專案</h3>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          {relatedProjects.map((relatedProject) => (
            <a 
              href={`/project/${relatedProject.id}`} 
              class="group block bg-white dark:bg-gray-800 rounded-lg overflow-hidden shadow-sm border border-gray-100 dark:border-gray-700 hover:shadow-md transition-all duration-300"
            >
              <div class="aspect-video overflow-hidden">
                <img 
                  src={typeof relatedProject.data.cover === 'string' ? relatedProject.data.cover : relatedProject.data.cover?.src || "/assets/images/fallback-image.png"} 
                  alt={relatedProject.data.title} 
                  class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
                />
              </div>
              <div class="p-4">
                <h4 class="font-bold group-hover:text-primary transition-colors">
                  {relatedProject.data.title}
                </h4>
                <p class="text-sm text-text-secondary line-clamp-1">
                  {relatedProject.data.description}
                </p>
              </div>
            </a>
          ))}
        </div>
      </div>
    )}
  </article>
</MainLayout>

<style>
  .line-clamp-1 {
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;  
    overflow: hidden;
  }
</style> 