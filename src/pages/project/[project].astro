---
import { type CollectionEntry } from 'astro:content';
import { slugify, getPublishedCollection } from '../../ts/utils';
import MainLayout from '../../layouts/MainLayout.astro';
import RelatedItems from '../../components/common/RelatedItems.astro';
import TagList from '../../components/common/TagList.astro';
import ProjectInfo from '../../components/project/ProjectInfo.astro';
import PostHeader from '../../components/layout/PostHeader.astro';
import BuyMeACoffee from '../../components/common/BuyMeACoffee.astro';

export const prerender = true;

export async function getStaticPaths() {
  const allProjects = await getPublishedCollection('projects');
  
  return allProjects.map((project) => ({
    params: { project: project.id || slugify(project.data.title) },
    props: { project }
  }));
}

interface ProjectPageProps {
  project: CollectionEntry<'projects'>;
}

const { project } = Astro.props as ProjectPageProps;
const { data } = project;
const dateObj = new Date(data.date);
const coverData = typeof data.cover === 'string' && data.cover
  ? { src: data.cover, alt: data.title || '專案封面' }
  : undefined;
---

<MainLayout title={data.title} description={data.description}>
  <PostHeader
    title={data.title}
    description={data.description}
    date={dateObj}
    category={data.category}
    designers={data.designers || []}
    cover={coverData}
  />
  <div class="flex max-w-7xl mx-auto">
    <!-- left sidebar -->
    <aside class="w-64 shrink-0 hidden md:block py-16 px-2">
      <div class="sticky-navbar-safe space-y-8">
          <!-- navigation links -->
          <div class="px-2">
            <h2 class="text-xl font-bold mb-4 pl-2">Navigation</h2>
            <ul class="space-y-1">
              <!-- First level: Back to Projects -->
              <li class="hover:bg-gray-100 dark:hover:bg-background-secondary transition-colors duration-300 px-2 py-1 rounded-md">
                <a
                  href="/project"
                  class="block hover:text-primary-500 transition-colors"
                >
                  <h3 class="font-medium text-sm flex items-center">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                    </svg>
                    Back to Projects
                  </h3>
                  <span class="text-xs text-gray-500 mt-1 block">
                    All projects
                  </span>
                </a>
              </li>
              
              <!-- Second level: Category page -->
              <li class="hover:bg-gray-100 dark:hover:bg-background-secondary transition-colors duration-300 px-2 py-1 rounded-md">
                <a
                  href={`/project/category/${slugify(data.category)}`}
                  class="block hover:text-primary-500 transition-colors"
                >
                  <h3 class="font-medium text-sm">
                    {data.category} Projects
                  </h3>
                  <span class="text-xs text-gray-500 mt-1 block">
                    Category: {data.category}
                  </span>
                </a>
              </li>
              
              <!-- Current project info -->
              <li class="px-2 py-1 rounded-md bg-background-secondary">
                <div class="block">
                  <h3 class="font-medium text-sm text-text-primary">
                    Current Project
                  </h3>
                  <span class="text-xs text-gray-500 mt-1 block line-clamp-2">
                    {data.title}
                  </span>
                </div>
              </li>
            </ul>
          </div>
          
          <!-- related projects -->
          <RelatedItems currentItem={project} collection="projects" linkPrefix="/project" limit={3} />
      </div>
    </aside>

    <!-- main content -->
    <div class="flex-grow max-w-3xl py-16 px-4 md:px-8 shadow-dark-lg dark:shadow-dark-xl">
      
      <!-- Mobile related projects -->
        <div class="block md:hidden mb-8">
          <div class="bg-background-secondary p-4 rounded-lg">
            <RelatedItems currentItem={project} collection="projects" linkPrefix="/project" limit={3} />
          </div>
        </div>
      <!-- project description -->
      <div id="description" class="mb-8">
        <h2 class="text-3xl font-bold mb-4">Project Description</h2>
        <p class="text-lg text-text-secondary leading-relaxed">
          {data.description}
        </p>
      </div>
      
      <!-- tag list -->
      {data.tags && data.tags.length > 0 && (
        <div id="tags" class="mb-8">
          <h3 class="text-2xl font-bold mb-4">Tags</h3>
          <TagList tags={data.tags} basePath="/tag" />
        </div>
      )}
      
      <!-- project images -->
      {data.images && data.images.length > 0 && (
        <div id="images" class="mb-8">
          <h3 class="text-2xl font-bold mb-6">Project Images</h3>
          <div class="space-y-8">
            {data.images.map((image: { src: string; description?: string }) => (
              <div class="w-full">
                <div class="w-full rounded-lg overflow-hidden">
                  <img 
                    src={image.src} 
                    alt={image.description || data.title || "Project image"} 
                    class="w-full h-auto object-contain"
                  />
                </div>
                {image.description && (
                  <p class="mt-3 text-text-secondary text-sm leading-relaxed">
                    {image.description}
                  </p>
                )}
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
    
    <!-- right sidebar -->
    <aside class="w-64 shrink-0 hidden xl:block py-16 px-2">
      <div class="sticky-navbar-safe space-y-4">
                 <BuyMeACoffee />
        
        <ProjectInfo 
          category={data.category}
          date={data.date}
          designers={data.designers}
          tags={data.tags}
          images={data.images}
        />
      </div>
    </aside>
  </div>
</MainLayout>

<script>
  import { setupScrollToTop, setupScrollToBottom } from '../../ts/scroll-utils';

  setupScrollToTop('backToTop');
  setupScrollToBottom('scrollToBottom');
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .prose {
    max-width: none;
  }
</style> 