---
import { getCollection, type CollectionEntry } from 'astro:content';
import { slugify, formatDate } from '../../ts/utils';
import MainLayout from '../../layouts/MainLayout.astro';
import RelatedProjects from '../../components/project/RelatedProjects.astro';
import ProjectInfo from '../../components/project/ProjectInfo.astro';
import PostHeader from '../../components/layout/PostHeader.astro';

export const prerender = true;

export async function getStaticPaths() {
  const allProjects = await getCollection('projects', ({ data }) => {
    return !data.draft;
  });
  
  return allProjects.map((project) => ({
    params: { project: project.id || slugify(project.data.title) },
    props: { project }
  }));
}

interface ProjectPageProps {
  project: CollectionEntry<'projects'>;
}

const { project } = Astro.props as ProjectPageProps;
const { data } = project;
const dateObj = new Date(data.date);
const coverData = typeof data.cover === 'string' && data.cover
  ? { src: data.cover, alt: data.title || '專案封面' }
  : undefined;
---

<MainLayout title={data.title} description={data.description}>
  <PostHeader
    title={data.title}
    description={data.description}
    date={dateObj}
    category={data.category}
    designers={data.designers || []}
    cover={coverData}
  />
  <div class="flex max-w-7xl mx-auto">
    <!-- left sidebar -->
    <aside class="w-64 shrink-0 hidden lg:block py-16 px-2">
      <div class="sticky-navbar-safe space-y-8">
        <!-- related projects -->
        <RelatedProjects currentProject={project} limit={3} />
      </div>
    </aside>

    <!-- main content -->
    <div class="flex-grow max-w-3xl pt-16 pb-32 px-8 shadow-dark-lg dark:shadow-dark-xl min-h-screen">
      <!-- project description -->
      <div class="mb-8">
        <p class="text-lg text-text-secondary italic">
          {data.description}
        </p>
      </div>
      
      <!-- tag list -->
      {data.tags && data.tags.length > 0 && (
        <div class="mb-8">
          <div class="flex flex-wrap gap-2">
            {data.tags.map((tag: string) => (
              <a
                href={`/tag/${slugify(tag)}`}
                class="px-3 py-1 bg-background-tertiary rounded-full text-sm hover:bg-primary hover:text-white transition-colors"
              >
                #{tag}
              </a>
            ))}
          </div>
        </div>
      )}
      
      <!-- cover shown in PostHeader -->
      
      <!-- project images -->
      {data.images && data.images.length > 0 && (
        <div class="mb-8">
          <h3 class="text-2xl font-bold mb-6">專案圖片</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {data.images.map((image: string) => (
              <div class="aspect-video overflow-hidden rounded-lg shadow-dark hover:shadow-dark-lg transition-all duration-300">
                <img 
                  src={image} 
                  alt={data.title || "專案圖片"} 
                  class="w-full h-full object-cover"
                />
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
    
    <!-- right sidebar -->
    <aside class="w-64 shrink-0 hidden xl:block py-16 px-2">
      <div class="sticky-navbar-safe space-y-4">
        <ProjectInfo 
          category={data.category}
          date={data.date}
          designers={data.designers}
          tags={data.tags}
          images={data.images}
        />
      </div>
    </aside>
  </div>
</MainLayout>

<script>
  // back to top function
  document.getElementById('backToTop')?.addEventListener('click', () => {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  });

  // expand all function
  let isExpanded = false;
  document.getElementById('expandAll')?.addEventListener('click', () => {
    const button = document.getElementById('expandAll');
    if (button) {
      isExpanded = !isExpanded;
      button.textContent = isExpanded ? 'Collapse All' : 'Expand All';
      
      // here you can add the logic for expand/collapse
      const details = document.querySelectorAll('details');
      details.forEach(detail => {
        detail.open = isExpanded;
      });
    }
  });

  // scroll to bottom function
  document.getElementById('scrollToBottom')?.addEventListener('click', () => {
    window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });
  });
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .prose {
    max-width: none;
  }
</style> 