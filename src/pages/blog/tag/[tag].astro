---
import { getCollection, type CollectionEntry } from 'astro:content';
import MainLayout from '../../../layouts/MainLayout.astro';
import PostCard from '../../../components/blog/PostCard.astro';
import CategorySection from '../../../components/blog/CategorySection.astro';
import PopularPosts from '../../../components/blog/PopularPosts.astro';
import { slugify } from '../../../ts/utils';

export const prerender = true;

export async function getStaticPaths() {
  const allPosts = await getCollection('posts', ({ data }) => {
    return !data.draft;
  });

  const allTags = allPosts
    .flatMap((post) => (post.data.tags || []) as string[])
    .filter(Boolean);

  const uniqueTagSlugs = Array.from(new Set(allTags.map((t) => slugify(t))));

  // 建立 slug -> 顯示名稱 的對應（取第一個出現的名稱）
  const slugToName = new Map<string, string>();
  for (const post of allPosts) {
    for (const tag of (post.data.tags || []) as string[]) {
      const key = slugify(tag);
      if (!slugToName.has(key)) slugToName.set(key, tag);
    }
  }

  return uniqueTagSlugs.map((slug) => {
    const filteredPosts = allPosts.filter((post) =>
      (post.data.tags || []).some((t: string) => slugify(t) === slug)
    );
    return {
      params: { tag: slug },
      props: {
        posts: filteredPosts,
        tagName: slugToName.get(slug) || slug,
      },
    };
  });
}

interface TagPageProps {
  tagName: string;
  posts: CollectionEntry<'posts'>[];
}

const { tagName, posts } = Astro.props as TagPageProps;
const title = `#${tagName} 的文章`;
const description = `查看所有包含 #${tagName} 標籤的文章`;
---

<MainLayout title={title} description={description}>
  <section 
    class="container mx-auto px-4 py-16"
    aria-label="標籤文章列表"
  >
    <div class="flex gap-8 max-w-7xl mx-auto">
      <!-- 左側邊欄 -->
      <aside class="w-64 shrink-0 hidden lg:block">
        <div class="sticky-navbar-safe space-y-8">
          <!-- 分類列表 -->
          <CategorySection />

          <!-- 熱門文章 -->
          <PopularPosts limit={5} />
        </div>
      </aside>

      <!-- 主要內容區 -->
      <div class="flex-grow mt-8">
        <h1 class="text-3xl font-bold mb-6">{title}</h1>
        <p class="mb-8">{description}</p>

        {posts && posts.length > 0 ? (
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {posts.map((post) => (
              <PostCard post={post} />
            ))}
          </div>
        ) : (
          <div class="flex flex-col items-center justify-center py-20 text-text-secondary bg-background-secondary rounded-lg shadow-inner">
            <div class="w-16 h-16 bg-gray-200 dark:bg-gray-700 rounded-full flex items-center justify-center text-gray-400 mb-4">
              <span class="text-2xl">!</span>
            </div>
            <h2 class="text-2xl font-semibold mb-2">尚無文章</h2>
            <p class="text-center max-w-md mb-8">
              目前找不到包含此標籤的文章。
            </p>
            <a 
              href={import.meta.env.BASE_URL}
              class="inline-flex items-center gap-2 px-6 py-3 bg-primary text-white rounded-lg hover:bg-opacity-90 transition-colors"
            >
              返回首頁
            </a>
          </div>
        )}

        <div class="mt-12 text-center" aria-hidden={posts.length === 0}>
          <a href="/blog" class="px-6 py-2 bg-primary text-white rounded-md hover:bg-primary-dark transition-colors">
            所有文章
          </a>
        </div>
      </div>
    </div>
  </section>
</MainLayout>


