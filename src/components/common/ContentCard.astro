---
import Card from "./Card.astro";

interface Tag {
  label: string;
  href: string;
}

interface Cta {
  label: string;
  href: string;
}

interface ImageMeta {
  src: string;
  alt: string;
}

interface Props {
  href: string;
  title: string;
  time?: string;
  description?: string;
  image: ImageMeta;
  category?: string;
  tags?: Tag[];
  cta?: Cta;
  class?: string;
}

const {
  href,
  title,
  time,
  description,
  image,
  category,
  tags = [],
  cta,
  class: customClass = "",
} = Astro.props as Props;
---

<Card class={customClass}>
  <a
    slot="image"
    href={href}
    class="block relative overflow-hidden"
  >
    <div class="aspect-video overflow-hidden">
      <img
        src={image.src}
        alt={image.alt}
        class="object-cover w-full h-full transition-transform duration-500 group-hover:scale-105"
        loading="lazy"
      />
    </div>

    {category && (
      <span class="label absolute top-4 left-4 px-3 py-1">
        {category}
      </span>
    )}
  </a>

  {time && <span slot="time">{time}</span>}

  <a slot="title" href={href} class="block">
    <h2 class="text-xl font-bold mb-2 text-gray-900 dark:text-gray-100 group-hover:text-primary transition-colors">
      {title}
    </h2>
  </a>

  {description && (
    <p slot="description" class="text-gray-600 dark:text-gray-300 text-sm line-clamp-2 mb-4">
      {description}
    </p>
  )}

  <div slot="actions">
    {tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-4">
        {tags.slice(0, 3).map((tag) => (
          <a
            href={tag.href}
            class="text-xs px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors"
          >
            #{tag.label}
          </a>
        ))}
      </div>
    )}

    {cta && (
      <a
        href={cta.href}
        class="inline-flex items-center px-4 py-2 bg-black dark:bg-white text-white dark:text-black rounded-lg hover:bg-gray-800 dark:hover:bg-gray-100 transition-colors font-medium text-sm"
      >
        {cta.label}
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-4 w-4 ml-1 transition-transform group-hover:translate-x-1"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          aria-hidden="true"
          focusable="false"
        >
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
        </svg>
      </a>
    )}
  </div>
</Card>
